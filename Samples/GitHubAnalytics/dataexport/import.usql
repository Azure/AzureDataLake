
CREATE DATABASE IF NOT EXISTS GitHubAnalytics;
CREATE TABLE GitHubAnalytics.dbo.Commit(CommitSha string,AuthorId int64?,AuthorLogin string,AuthorSiteAdmin boolean?,AuthorType string,CommitAuthorDate DateTime?,CommitAuthorEmail string,CommitAuthorName string,CommitCommentCount int64?,CommitCommitterDate DateTime?,CommitCommitterEmail string,CommitCommitterName string,CommitMessage string,Comm
itTreeSha string,CommitterId int64?,CommitterLogin string,CommitterSiteAdmin boolean?,CommitterType string,StatsAdditions int64?,StatsDeletions int64?,StatsTotal int64?,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_Commit CLUSTERED (CommitSha ASC) PARTITIONED BY HASH (CommitSha)CommitAuthorDate,);
CREATE TABLE GitHubAnalytics.dbo.CommitComment(CommitSha string,CommitCommentId int,Body string,CreatedAt DateTime?,Line int64?,Path string,Position int64?,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_CommitComment CLUSTERED (CommitSha ASC) PARTITIONE
D BY HASH (CommitSha)CommitCommentId,);
CREATE TABLE GitHubAnalytics.dbo.CommitFile(CommitSha string,CommitFileId int,CommitFileSha string,Additions int64?,Changes int64?,Deletions int64?,Filename string,Patch byte[],PreviousFilename string,Status string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_CommitFile CLUSTERED (CommitSha ASC,CommitFileSha ASC) PARTITIONED BY HASH (Commi
tSha,CommitFileSha));
CREATE TABLE GitHubAnalytics.dbo.CommitParent(CommitSha string,CommitParentId int,CommitParentSha string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_CommitParent CLUSTERED (CommitParentSha ASC) PARTITIONED BY HASH (CommitParentSha));
CREATE TABLE GitHubAnalytics.dbo.Event(EventId int64?,ActorId int64?,ActorLogin string,CreatedAt DateTime?,OrgId int64?,OrgLogin string,PayloadAction string,PayloadBefore string,PayloadCommentLinksHtmlHref string,PayloadCommentLinksPullRequestHref string,PayloadCommentLinksSelfHref string,PayloadCommentBody string,PayloadCommentCommitId string,P
ayloadCommentCreatedAt DateTime?,PayloadCommentDiffHunk string,PayloadCommentId int64?,PayloadCommentLine int64?,PayloadCommentOriginalCommitId string,PayloadCommentOriginalPosition int64?,PayloadCommentPath string,PayloadCommentPosition int64?,PayloadCommentUpdatedAt DateTime?,PayloadCommentUserId int64?,PayloadCommentUserLogin string,PayloadCo
mmentUserSiteAdmin boolean?,PayloadCommentUserType string,PayloadDescription string,PayloadDistinctSize int64?,PayloadForkeeCreatedAt DateTime?,PayloadForkeeDefaultBranch string,PayloadForkeeDescription string,PayloadForkeeFork boolean?,PayloadForkeeForks int64?,PayloadForkeeForksCount int64?,PayloadForkeeFullName string,PayloadForkeeHasDownload
s boolean?,PayloadForkeeHasIssues boolean?,PayloadForkeeHasPages boolean?,PayloadForkeeHasWiki boolean?,PayloadForkeeHomepage string,PayloadForkeeId int64?,PayloadForkeeLanguage string,PayloadForkeeName string,PayloadForkeeOpenIssues int64?,PayloadForkeeOpenIssuesCount int64?,PayloadForkeeOwnerId int64?,PayloadForkeeOwnerLogin string,PayloadFork
eeOwnerSiteAdmin boolean?,PayloadForkeeOwnerType string,PayloadForkeePrivate boolean?,PayloadForkeePublic boolean?,PayloadForkeePushedAt DateTime?,PayloadForkeeSize int64?,PayloadForkeeStargazersCount int64?,PayloadForkeeUpdatedAt DateTime?,PayloadForkeeWatchers int64?,PayloadForkeeWatchersCount int64?,PayloadHead string,PayloadIssueAssigneeId i
nt64?,PayloadIssueAssigneeLogin string,PayloadIssueAssigneeSiteAdmin boolean?,PayloadIssueAssigneeType string,PayloadIssueBody string,PayloadIssueClosedAt DateTime?,PayloadIssueComments int64?,PayloadIssueCreatedAt DateTime?,PayloadIssueId int64?,PayloadIssueLocked boolean?,PayloadIssueMilestoneClosedAt DateTime?,PayloadIssueMilestoneClosedIssue
s int64?,PayloadIssueMilestoneCreatedAt DateTime?,PayloadIssueMilestoneCreatorId int64?,PayloadIssueMilestoneCreatorLogin string,PayloadIssueMilestoneCreatorSiteAdmin boolean?,PayloadIssueMilestoneCreatorType string,PayloadIssueMilestoneDescription string,PayloadIssueMilestoneDueOn DateTime?,PayloadIssueMilestoneId int64?,PayloadIssueMilestoneNu
mber int64?,PayloadIssueMilestoneOpenIssues int64?,PayloadIssueMilestoneState string,PayloadIssueMilestoneTitle string,PayloadIssueMilestoneUpdatedAt DateTime?,PayloadIssueNumber int64?,PayloadIssueState string,PayloadIssueTitle string,PayloadIssueUpdatedAt DateTime?,PayloadIssueUserId int64?,PayloadIssueUserLogin string,PayloadIssueUserSiteAdmi
n boolean?,PayloadIssueUserType string,PayloadMasterBranch string,PayloadMemberId int64?,PayloadMemberLogin string,PayloadMemberSiteAdmin boolean?,PayloadMemberType string,PayloadNumber int64?,PayloadPushId int64?,PayloadPusherType string,PayloadRef string,PayloadRefType string,PayloadReleaseAuthorId int64?,PayloadReleaseAuthorLogin string,Paylo
adReleaseAuthorSiteAdmin boolean?,PayloadReleaseAuthorType string,PayloadReleaseBody string,PayloadReleaseCreatedAt DateTime?,PayloadReleaseDraft boolean?,PayloadReleaseId int64?,PayloadReleaseName string,PayloadReleasePrerelease boolean?,PayloadReleasePublishedAt DateTime?,PayloadReleaseTagName string,PayloadReleaseTargetCommitish string,Payloa
dSize int64?,IsPublic boolean?,RepoId int64?,RepoName string,Type string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_Event CLUSTERED (EventId ASC) PARTITIONED BY HASH (EventId));
CREATE TABLE GitHubAnalytics.dbo.EventPayloadCommit(EventId int64?,EventPayloadCommitId int,EventPayloadCommitSha string,AuthorEmail string,AuthorName string,Distinct boolean?,Message string,EtlIngestDate DateTime,EtlSourceId string,INDEX IX_EventPayloadCommit CLUSTERED (EventId ASC) PARTITIONED BY HASH (EventId)EtlSourceId,);
CREATE TABLE GitHubAnalytics.dbo.EventPayloadIssueLabel(EventId int64?,EventPayloadIssueLabelId int,EtlIngestDate DateTime,Color string,Name string,INDEX IX_EventPayloadIssueLabel CLUSTERED (EventId ASC,Name ASC) PARTITIONED BY HASH (EventId,Name));
CREATE TABLE GitHubAnalytics.dbo.EventPayloadPage(EventId int64?,EventPayloadPageId int,EtlIngestDate DateTime,EventPayloadPageSha string,Action string,PageName string,Summary string,Title string,EtlSourceId string,INDEX IX_EventPayloadPage CLUSTERED (EventPayloadPageSha ASC) PARTITIONED BY HASH (EventPayloadPageSha));
CREATE TABLE GitHubAnalytics.dbo.EventPayloadPullRequest(EventId int64?,EventPayloadPullRequestId int64?,Additions int64?,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,BaseLabel string,BaseRef string,BaseRepoCreatedAt DateTime?,BaseRepoDefaultBranch string,BaseRepoDescription string,BaseRepoFork boolean?,B
aseRepoForks int64?,BaseRepoForksCount int64?,BaseRepoFullName string,BaseRepoHasDownloads boolean?,BaseRepoHasIssues boolean?,BaseRepoHasPages boolean?,BaseRepoHasWiki boolean?,BaseRepoHomepage string,BaseRepoId int64?,BaseRepoLanguage string,BaseRepoName string,BaseRepoOpenIssues int64?,BaseRepoOpenIssuesCount int64?,BaseRepoOwnerId int64?,Bas
eRepoOwnerLogin string,BaseRepoOwnerSiteAdmin boolean?,BaseRepoOwnerType string,BaseRepoPrivate boolean?,BaseRepoPushedAt DateTime?,BaseRepoSize int64?,BaseRepoStargazersCount int64?,BaseRepoUpdatedAt DateTime?,BaseRepoWatchers int64?,BaseRepoWatchersCount int64?,BaseSha string,BaseUserId int64?,BaseUserLogin string,BaseUserSiteAdmin boolean?,Ba
seUserType string,Body string,ChangedFiles int64?,ClosedAt DateTime?,Comments int64?,Commits int64?,CreatedAt DateTime?,Deletions int64?,HeadLabel string,HeadRef string,HeadRepoCreatedAt DateTime?,HeadRepoDefaultBranch string,HeadRepoDescription string,HeadRepoFork boolean?,HeadRepoForks int64?,HeadRepoForksCount int64?,HeadRepoFullName string,H
eadRepoHasDownloads boolean?,HeadRepoHasIssues boolean?,HeadRepoHasPages boolean?,HeadRepoHasWiki boolean?,HeadRepoHomepage string,HeadRepoId int64?,HeadRepoLanguage string,HeadRepoName string,HeadRepoOpenIssues int64?,HeadRepoOpenIssuesCount int64?,HeadRepoOwnerId int64?,HeadRepoOwnerLogin string,HeadRepoOwnerSiteAdmin boolean?,HeadRepoOwnerTyp
e string,HeadRepoPrivate boolean?,HeadRepoPushedAt DateTime?,HeadRepoSize int64?,HeadRepoStargazersCount int64?,HeadRepoUpdatedAt DateTime?,HeadRepoWatchers int64?,HeadRepoWatchersCount int64?,HeadSha string,HeadUserId int64?,HeadUserLogin string,HeadUserSiteAdmin boolean?,HeadUserType string,Locked boolean?,MergeCommitSha string,Mergeable boole
an?,MergeableState string,Merged boolean?,MergedAt DateTime?,MergedById int64?,MergedByLogin string,MergedBySiteAdmin boolean?,MergedByType string,MilestoneClosedAt DateTime?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType str
ing,MilestoneDescription string,MilestoneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState string,MilestoneTitle string,MilestoneUpdatedAt DateTime?,Number int64?,ReviewComments int64?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType str
ing,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_EventPayloadPullRequest CLUSTERED (EventId ASC) PARTITIONED BY HASH (EventId)EtlSourceId,);
CREATE TABLE GitHubAnalytics.dbo.EventPayloadReleaseAsset(EventId int64?,EventPayloadReleaseAssetId int64?,ContentType string,CreatedAt DateTime?,DownloadCount int64?,Name string,Size int64?,State string,UpdatedAt DateTime?,UploaderId int64?,UploaderLogin string,UploaderSiteAdmin boolean?,UploaderType string,EtlSourceId string,EtlIngestDate Date
Time,INDEX IX_EventPayloadReleaseAsset CLUSTERED (EventId ASC,EventPayloadReleaseAssetId ASC) PARTITIONED BY HASH (EventId,EventPayloadReleaseAssetId));
CREATE TABLE GitHubAnalytics.dbo.Fork(Repo string,Owner string,ForkId int64?,CreatedAt DateTime?,DefaultBranch string,Description string,Fork boolean?,Forks int64?,ForksCount int64?,FullName string,HasDownloads boolean?,HasIssues boolean?,HasPages boolean?,HasWiki boolean?,Language string,Name string,NetworkCount int64?,OpenIssues int64?,OpenIss
uesCount int64?,ParentCreatedAt DateTime?,ParentDefaultBranch string,ParentDescription string,ParentFork boolean?,ParentForks int64?,ParentForksCount int64?,ParentFullName string,ParentHasDownloads boolean?,ParentHasIssues boolean?,ParentHasPages boolean?,ParentHasWiki boolean?,ParentId int64?,ParentLanguage string,ParentName string,ParentOpenIs
sues int64?,ParentOpenIssuesCount int64?,ParentOwnerId int64?,ParentOwnerLogin string,ParentOwnerSiteAdmin boolean?,ParentOwnerType string,ParentPrivate boolean?,ParentPushedAt DateTime?,ParentSize int64?,ParentStargazersCount int64?,ParentUpdatedAt DateTime?,ParentWatchers int64?,ParentWatchersCount int64?,PermissionsAdmin boolean?,PermissionsP
ull boolean?,PermissionsPush boolean?,IsPrivate boolean?,PushedAt DateTime?,Size int64?,SourceCreatedAt DateTime?,SourceDefaultBranch string,SourceDescription string,SourceFork boolean?,SourceForks int64?,SourceForksCount int64?,SourceFullName string,SourceHasDownloads boolean?,SourceHasIssues boolean?,SourceHasPages boolean?,SourceHasWiki boole
an?,SourceId int64?,SourceLanguage string,SourceName string,SourceOpenIssues int64?,SourceOpenIssuesCount int64?,SourceOwnerId int64?,SourceOwnerLogin string,SourceOwnerSiteAdmin boolean?,SourceOwnerType string,SourcePrivate boolean?,SourcePushedAt DateTime?,SourceSize int64?,SourceStargazersCount int64?,SourceUpdatedAt DateTime?,SourceWatchers 
int64?,SourceWatchersCount int64?,StargazersCount int64?,SubscribersCount int64?,UpdatedAt DateTime?,Watchers int64?,WatchersCount int64?,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_Fork CLUSTERED (Repo ASC,Owner ASC,ForkId ASC) PARTITIONED BY HASH (Repo,Owner,ForkId));
CREATE TABLE GitHubAnalytics.dbo.GeoCache(Key string,City string,Country string,CountryCode string,Latitude string,Longitude string,State string,Status string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_GeoCache CLUSTERED (Key ASC) PARTITIONED BY HASH (Key));
CREATE TABLE GitHubAnalytics.dbo.Issue(Repo string,Owner string,Number int64?,IssueId int64?,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,Body byte[],ClosedAt DateTime?,ClosedById int64?,ClosedByLogin string,ClosedBySiteAdmin boolean?,ClosedByType string,Comments int64?,CreatedAt DateTime?,Locked boolean?
,MilestoneClosedAt DateTime?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType string,MilestoneDescription string,MilestoneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState strin
g,MilestoneTitle string,MilestoneUpdatedAt DateTime?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_Issue CLUSTERED (Repo ASC) PARTITIONED BY HASH (Repo)Owner,Number,);
CREATE TABLE GitHubAnalytics.dbo.IssueComment(Repo string,Owner string,IssueId int64?,IssueCommentId int64?,Body byte[],CreatedAt DateTime?,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_IssueComment CLUSTERED (Repo ASC,Owner ASC,IssueId ASC,IssueCommen
tId ASC) PARTITIONED BY HASH (Repo,Owner,IssueId,IssueCommentId));
CREATE TABLE GitHubAnalytics.dbo.IssueEvent(Repo string,Owner string,IssueId int64?,IssueEventId int64?,ActorId int64?,ActorLogin string,ActorSiteAdmin boolean?,ActorType string,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,CommitId string,CreatedAt DateTime?,EventName string,LabelColor string,LabelName st
ring,MilestoneTitle string,RenameFrom string,RenameTo string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_IssueEvent CLUSTERED (Repo ASC,Owner ASC,IssueId ASC,IssueEventId ASC) PARTITIONED BY HASH (Repo,Owner,IssueId,IssueEventId));
CREATE TABLE GitHubAnalytics.dbo.IssueLabel(IssueId int64?,IssueLabelId int,EtlIngestDate DateTime,Color string,Name string,UpdatedAt DateTime?,EtlSourceId string,INDEX IX_IssueLabel CLUSTERED (IssueId ASC,Name ASC) PARTITIONED BY HASH (IssueId,Name));
CREATE TABLE GitHubAnalytics.dbo.OrgMember(Org string,OrgMemberId int64?,Login string,SiteAdmin boolean?,Type string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_OrgMember CLUSTERED (Org ASC) PARTITIONED BY HASH (Org));
CREATE TABLE GitHubAnalytics.dbo.PullRequest(Repo string,Owner string,Number int64?,PullRequestId int64?,LinksCommentsHref string,LinksCommitsHref string,LinksHtmlHref string,LinksIssueHref string,LinksReviewCommentHref string,LinksReviewCommentsHref string,LinksSelfHref string,LinksStatusesHref string,Additions int64?,AssigneeId int64?,Assignee
Login string,AssigneeSiteAdmin boolean?,AssigneeType string,BaseLabel string,BaseRef string,BaseRepoCreatedAt DateTime?,BaseRepoDefaultBranch string,BaseRepoDescription string,BaseRepoFork boolean?,BaseRepoForks int64?,BaseRepoForksCount int64?,BaseRepoFullName string,BaseRepoHasDownloads boolean?,BaseRepoHasIssues boolean?,BaseRepoHasPages bool
ean?,BaseRepoHasWiki boolean?,BaseRepoHomepage string,BaseRepoId int64?,BaseRepoLanguage string,BaseRepoName string,BaseRepoOpenIssues int64?,BaseRepoOpenIssuesCount int64?,BaseRepoOwnerId int64?,BaseRepoOwnerLogin string,BaseRepoOwnerSiteAdmin boolean?,BaseRepoOwnerType string,BaseRepoPrivate boolean?,BaseRepoPushedAt DateTime?,BaseRepoSize int
64?,BaseRepoStargazersCount int64?,BaseRepoUpdatedAt DateTime?,BaseRepoWatchers int64?,BaseRepoWatchersCount int64?,BaseSha string,BaseUserId int64?,BaseUserLogin string,BaseUserSiteAdmin boolean?,BaseUserType string,Body byte[],ChangedFiles int64?,ClosedAt DateTime?,Comments int64?,Commits int64?,CreatedAt DateTime?,Deletions int64?,HeadLabel s
tring,HeadRef string,HeadRepoCreatedAt DateTime?,HeadRepoDefaultBranch string,HeadRepoDescription string,HeadRepoFork boolean?,HeadRepoForks int64?,HeadRepoForksCount int64?,HeadRepoFullName string,HeadRepoHasDownloads boolean?,HeadRepoHasIssues boolean?,HeadRepoHasPages boolean?,HeadRepoHasWiki boolean?,HeadRepoHomepage string,HeadRepoId int64?
,HeadRepoLanguage string,HeadRepoName string,HeadRepoOpenIssues int64?,HeadRepoOpenIssuesCount int64?,HeadRepoOwnerId int64?,HeadRepoOwnerLogin string,HeadRepoOwnerSiteAdmin boolean?,HeadRepoOwnerType string,HeadRepoPrivate boolean?,HeadRepoPushedAt DateTime?,HeadRepoSize int64?,HeadRepoStargazersCount int64?,HeadRepoUpdatedAt DateTime?,HeadRepo
Watchers int64?,HeadRepoWatchersCount int64?,HeadSha string,HeadUserId int64?,HeadUserLogin string,HeadUserSiteAdmin boolean?,HeadUserType string,Locked boolean?,MergeCommitSha string,Mergeable boolean?,MergeableState string,Merged boolean?,MergedAt DateTime?,MergedById int64?,MergedByLogin string,MergedBySiteAdmin boolean?,MergedByType string,M
ilestoneClosedAt DateTime?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType string,MilestoneDescription string,MilestoneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState string,
MilestoneTitle string,MilestoneUpdatedAt DateTime?,ReviewComments int64?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_PullRequest CLUSTERED (Repo ASC,Owner ASC,Number ASC) PARTITIONED BY HASH (Repo,Owner,Number));
CREATE TABLE GitHubAnalytics.dbo.PullRequestComment(Repo string,Owner string,PullRequestId int64?,PullRequestCommentId int64?,LinksHtmlHref string,LinksPullRequestHref string,LinksSelfHref string,Body byte[],CommitId string,CreatedAt DateTime?,DiffHunk string,OriginalCommitId string,OriginalPosition int64?,Path string,Position int64?,UpdatedAt D
ateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_PullRequestComment CLUSTERED (Repo ASC,Owner ASC,PullRequestId ASC,PullRequestCommentId ASC) PARTITIONED BY HASH (Repo,Owner,PullRequestId,PullRequestCommentId));
CREATE TABLE GitHubAnalytics.dbo.Repo(Name string,OwnerLogin string,CreatedAt DateTime?,DefaultBranch string,Description string,Fork boolean?,Forks int64?,ForksCount int64?,FullName string,HasDownloads boolean?,HasIssues boolean?,HasPages boolean?,HasWiki boolean?,Homepage string,RepoId int64?,Language string,NetworkCount int64?,OpenIssues int64
?,OpenIssuesCount int64?,OrganizationId int64?,OrganizationLogin string,OrganizationSiteAdmin boolean?,OrganizationType string,OwnerId int64?,OwnerSiteAdmin boolean?,OwnerType string,ParentCreatedAt DateTime?,ParentDefaultBranch string,ParentDescription string,ParentFork boolean?,ParentForks int64?,ParentForksCount int64?,ParentFullName string,P
arentHasDownloads boolean?,ParentHasIssues boolean?,ParentHasPages boolean?,ParentHasWiki boolean?,ParentHomepage string,ParentId int64?,ParentLanguage string,ParentName string,ParentOpenIssues int64?,ParentOpenIssuesCount int64?,ParentOwnerId int64?,ParentOwnerLogin string,ParentOwnerSiteAdmin boolean?,ParentOwnerType string,ParentPrivate boole
an?,ParentPushedAt DateTime?,ParentSize int64?,ParentStargazersCount int64?,ParentUpdatedAt DateTime?,ParentWatchers int64?,ParentWatchersCount int64?,PermissionsAdmin boolean?,PermissionsPull boolean?,PermissionsPush boolean?,IsPrivate boolean?,PushedAt DateTime?,Size int64?,SourceCreatedAt DateTime?,SourceDefaultBranch string,SourceDescription
 string,SourceFork boolean?,SourceForks int64?,SourceForksCount int64?,SourceFullName string,SourceHasDownloads boolean?,SourceHasIssues boolean?,SourceHasPages boolean?,SourceHasWiki boolean?,SourceHomepage string,SourceId int64?,SourceLanguage string,SourceName string,SourceOpenIssues int64?,SourceOpenIssuesCount int64?,SourceOwnerId int64?,So
urceOwnerLogin string,SourceOwnerSiteAdmin boolean?,SourceOwnerType string,SourcePrivate boolean?,SourcePushedAt DateTime?,SourceSize int64?,SourceStargazersCount int64?,SourceUpdatedAt DateTime?,SourceWatchers int64?,SourceWatchersCount int64?,StargazersCount int64?,SubscribersCount int64?,UpdatedAt DateTime?,Watchers int64?,WatchersCount int64
?,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_Repo CLUSTERED (Name ASC,OwnerLogin ASC) PARTITIONED BY HASH (Name,OwnerLogin));
CREATE TABLE GitHubAnalytics.dbo.RepoLabel(Repo string,Owner string,Color string,Name string,EtlSourceId string,EtlIngestDate DateTime,INDEX IX_RepoLabel CLUSTERED (Repo ASC,Owner ASC) PARTITIONED BY HASH (Repo,Owner));
CREATE TABLE GitHubAnalytics.dbo.User(Login string,UserId int64?,Bio string,Blog string,Company string,CreatedAt DateTime?,Email string,Followers int64?,Following int64?,Hireable boolean?,Location string,Name string,PublicGists int64?,PublicRepos int64?,SiteAdmin boolean?,Type string,UpdatedAt DateTime?,EtlSourceId string,EtlIngestDate DateTime,
INDEX IX_User CLUSTERED (Login ASC) PARTITIONED BY HASH (Login));
CREATE TABLE GitHubAnalytics.dbo.Watcher(Repo string,Owner string,Login string,WatcherId int64?,Bio string,Blog string,Company string,CreatedAt DateTime?,Email string,Followers int64?,Following int64?,Hireable boolean?,Location string,Name string,PublicGists int64?,PublicRepos int64?,SiteAdmin boolean?,Type string,UpdatedAt DateTime?,EtlSourceId
 string,EtlIngestDate DateTime,RowNumber int64?,INDEX IX_Watcher CLUSTERED (Repo ASC,Owner ASC,Login ASC) PARTITIONED BY HASH (Repo,Owner,Login));




@populate = EXTRACT CommitSha string,AuthorId int64?,AuthorLogin string,AuthorSiteAdmin boolean?,AuthorType string,CommitAuthorDate DateTime?,CommitAuthorEmail string,CommitAuthorName string,CommitCommentCount int64?,CommitCommitterDate DateTime?,CommitCommitterEmail string,CommitCommitterName string,CommitMessage string,CommitTreeSha string,Com
mitterId int64?,CommitterLogin string,CommitterSiteAdmin boolean?,CommitterType string,StatsAdditions int64?,StatsDeletions int64?,StatsTotal int64?,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Commit" USING Extractors.Tsv(); INSERT INTO GitHubAnalyt
ics.dbo.Commit SELECT * FROM @populate;
@populate = EXTRACT CommitSha string,CommitCommentId int,Body string,CreatedAt DateTime?,Line int64?,Path string,Position int64?,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHub
Analytics.dbo.CommitComment" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.CommitComment SELECT * FROM @populate;
@populate = EXTRACT CommitSha string,CommitFileId int,CommitFileSha string,Additions int64?,Changes int64?,Deletions int64?,Filename string,Patch byte[],PreviousFilename string,Status string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.CommitFile" US
ING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.CommitFile SELECT * FROM @populate;
@populate = EXTRACT CommitSha string,CommitParentId int,CommitParentSha string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.CommitParent" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.CommitParent SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,ActorId int64?,ActorLogin string,CreatedAt DateTime?,OrgId int64?,OrgLogin string,PayloadAction string,PayloadBefore string,PayloadCommentLinksHtmlHref string,PayloadCommentLinksPullRequestHref string,PayloadCommentLinksSelfHref string,PayloadCommentBody string,PayloadCommentCommitId string,PayloadCommentCreate
dAt DateTime?,PayloadCommentDiffHunk string,PayloadCommentId int64?,PayloadCommentLine int64?,PayloadCommentOriginalCommitId string,PayloadCommentOriginalPosition int64?,PayloadCommentPath string,PayloadCommentPosition int64?,PayloadCommentUpdatedAt DateTime?,PayloadCommentUserId int64?,PayloadCommentUserLogin string,PayloadCommentUserSiteAdmin 
boolean?,PayloadCommentUserType string,PayloadDescription string,PayloadDistinctSize int64?,PayloadForkeeCreatedAt DateTime?,PayloadForkeeDefaultBranch string,PayloadForkeeDescription string,PayloadForkeeFork boolean?,PayloadForkeeForks int64?,PayloadForkeeForksCount int64?,PayloadForkeeFullName string,PayloadForkeeHasDownloads boolean?,PayloadF
orkeeHasIssues boolean?,PayloadForkeeHasPages boolean?,PayloadForkeeHasWiki boolean?,PayloadForkeeHomepage string,PayloadForkeeId int64?,PayloadForkeeLanguage string,PayloadForkeeName string,PayloadForkeeOpenIssues int64?,PayloadForkeeOpenIssuesCount int64?,PayloadForkeeOwnerId int64?,PayloadForkeeOwnerLogin string,PayloadForkeeOwnerSiteAdmin bo
olean?,PayloadForkeeOwnerType string,PayloadForkeePrivate boolean?,PayloadForkeePublic boolean?,PayloadForkeePushedAt DateTime?,PayloadForkeeSize int64?,PayloadForkeeStargazersCount int64?,PayloadForkeeUpdatedAt DateTime?,PayloadForkeeWatchers int64?,PayloadForkeeWatchersCount int64?,PayloadHead string,PayloadIssueAssigneeId int64?,PayloadIssueA
ssigneeLogin string,PayloadIssueAssigneeSiteAdmin boolean?,PayloadIssueAssigneeType string,PayloadIssueBody string,PayloadIssueClosedAt DateTime?,PayloadIssueComments int64?,PayloadIssueCreatedAt DateTime?,PayloadIssueId int64?,PayloadIssueLocked boolean?,PayloadIssueMilestoneClosedAt DateTime?,PayloadIssueMilestoneClosedIssues int64?,PayloadIss
ueMilestoneCreatedAt DateTime?,PayloadIssueMilestoneCreatorId int64?,PayloadIssueMilestoneCreatorLogin string,PayloadIssueMilestoneCreatorSiteAdmin boolean?,PayloadIssueMilestoneCreatorType string,PayloadIssueMilestoneDescription string,PayloadIssueMilestoneDueOn DateTime?,PayloadIssueMilestoneId int64?,PayloadIssueMilestoneNumber int64?,Payload
IssueMilestoneOpenIssues int64?,PayloadIssueMilestoneState string,PayloadIssueMilestoneTitle string,PayloadIssueMilestoneUpdatedAt DateTime?,PayloadIssueNumber int64?,PayloadIssueState string,PayloadIssueTitle string,PayloadIssueUpdatedAt DateTime?,PayloadIssueUserId int64?,PayloadIssueUserLogin string,PayloadIssueUserSiteAdmin boolean?,PayloadI
ssueUserType string,PayloadMasterBranch string,PayloadMemberId int64?,PayloadMemberLogin string,PayloadMemberSiteAdmin boolean?,PayloadMemberType string,PayloadNumber int64?,PayloadPushId int64?,PayloadPusherType string,PayloadRef string,PayloadRefType string,PayloadReleaseAuthorId int64?,PayloadReleaseAuthorLogin string,PayloadReleaseAuthorSite
Admin boolean?,PayloadReleaseAuthorType string,PayloadReleaseBody string,PayloadReleaseCreatedAt DateTime?,PayloadReleaseDraft boolean?,PayloadReleaseId int64?,PayloadReleaseName string,PayloadReleasePrerelease boolean?,PayloadReleasePublishedAt DateTime?,PayloadReleaseTagName string,PayloadReleaseTargetCommitish string,PayloadSize int64?,IsPubl
ic boolean?,RepoId int64?,RepoName string,Type string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Event" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.Event SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,EventPayloadCommitId int,EventPayloadCommitSha string,AuthorEmail string,AuthorName string,Distinct boolean?,Message string,EtlIngestDate DateTime,EtlSourceId string FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.EventPayloadCommit" USING Extractors.Tsv(); IN
SERT INTO GitHubAnalytics.dbo.EventPayloadCommit SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,EventPayloadIssueLabelId int,EtlIngestDate DateTime,Color string,Name string FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.EventPayloadIssueLabel" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.EventPayloadIssueLabel SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,EventPayloadPageId int,EtlIngestDate DateTime,EventPayloadPageSha string,Action string,PageName string,Summary string,Title string,EtlSourceId string FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.EventPayloadPage" USING Extractors.Tsv(); INSERT INTO GitHubAn
alytics.dbo.EventPayloadPage SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,EventPayloadPullRequestId int64?,Additions int64?,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,BaseLabel string,BaseRef string,BaseRepoCreatedAt DateTime?,BaseRepoDefaultBranch string,BaseRepoDescription string,BaseRepoFork boolean?,BaseRepoForks int64?,BaseRepoForksCoun
t int64?,BaseRepoFullName string,BaseRepoHasDownloads boolean?,BaseRepoHasIssues boolean?,BaseRepoHasPages boolean?,BaseRepoHasWiki boolean?,BaseRepoHomepage string,BaseRepoId int64?,BaseRepoLanguage string,BaseRepoName string,BaseRepoOpenIssues int64?,BaseRepoOpenIssuesCount int64?,BaseRepoOwnerId int64?,BaseRepoOwnerLogin string,BaseRepoOwnerS
iteAdmin boolean?,BaseRepoOwnerType string,BaseRepoPrivate boolean?,BaseRepoPushedAt DateTime?,BaseRepoSize int64?,BaseRepoStargazersCount int64?,BaseRepoUpdatedAt DateTime?,BaseRepoWatchers int64?,BaseRepoWatchersCount int64?,BaseSha string,BaseUserId int64?,BaseUserLogin string,BaseUserSiteAdmin boolean?,BaseUserType string,Body string,Changed
Files int64?,ClosedAt DateTime?,Comments int64?,Commits int64?,CreatedAt DateTime?,Deletions int64?,HeadLabel string,HeadRef string,HeadRepoCreatedAt DateTime?,HeadRepoDefaultBranch string,HeadRepoDescription string,HeadRepoFork boolean?,HeadRepoForks int64?,HeadRepoForksCount int64?,HeadRepoFullName string,HeadRepoHasDownloads boolean?,HeadRepo
HasIssues boolean?,HeadRepoHasPages boolean?,HeadRepoHasWiki boolean?,HeadRepoHomepage string,HeadRepoId int64?,HeadRepoLanguage string,HeadRepoName string,HeadRepoOpenIssues int64?,HeadRepoOpenIssuesCount int64?,HeadRepoOwnerId int64?,HeadRepoOwnerLogin string,HeadRepoOwnerSiteAdmin boolean?,HeadRepoOwnerType string,HeadRepoPrivate boolean?,Hea
dRepoPushedAt DateTime?,HeadRepoSize int64?,HeadRepoStargazersCount int64?,HeadRepoUpdatedAt DateTime?,HeadRepoWatchers int64?,HeadRepoWatchersCount int64?,HeadSha string,HeadUserId int64?,HeadUserLogin string,HeadUserSiteAdmin boolean?,HeadUserType string,Locked boolean?,MergeCommitSha string,Mergeable boolean?,MergeableState string,Merged bool
ean?,MergedAt DateTime?,MergedById int64?,MergedByLogin string,MergedBySiteAdmin boolean?,MergedByType string,MilestoneClosedAt DateTime?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType string,MilestoneDescription string,Miles
toneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState string,MilestoneTitle string,MilestoneUpdatedAt DateTime?,Number int64?,ReviewComments int64?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate 
DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.EventPayloadPullRequest" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.EventPayloadPullRequest SELECT * FROM @populate;
@populate = EXTRACT EventId int64?,EventPayloadReleaseAssetId int64?,ContentType string,CreatedAt DateTime?,DownloadCount int64?,Name string,Size int64?,State string,UpdatedAt DateTime?,UploaderId int64?,UploaderLogin string,UploaderSiteAdmin boolean?,UploaderType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azur
edatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.EventPayloadReleaseAsset" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.EventPayloadReleaseAsset SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,ForkId int64?,CreatedAt DateTime?,DefaultBranch string,Description string,Fork boolean?,Forks int64?,ForksCount int64?,FullName string,HasDownloads boolean?,HasIssues boolean?,HasPages boolean?,HasWiki boolean?,Language string,Name string,NetworkCount int64?,OpenIssues int64?,OpenIssuesCount int64?,Pa
rentCreatedAt DateTime?,ParentDefaultBranch string,ParentDescription string,ParentFork boolean?,ParentForks int64?,ParentForksCount int64?,ParentFullName string,ParentHasDownloads boolean?,ParentHasIssues boolean?,ParentHasPages boolean?,ParentHasWiki boolean?,ParentId int64?,ParentLanguage string,ParentName string,ParentOpenIssues int64?,Parent
OpenIssuesCount int64?,ParentOwnerId int64?,ParentOwnerLogin string,ParentOwnerSiteAdmin boolean?,ParentOwnerType string,ParentPrivate boolean?,ParentPushedAt DateTime?,ParentSize int64?,ParentStargazersCount int64?,ParentUpdatedAt DateTime?,ParentWatchers int64?,ParentWatchersCount int64?,PermissionsAdmin boolean?,PermissionsPull boolean?,Permi
ssionsPush boolean?,IsPrivate boolean?,PushedAt DateTime?,Size int64?,SourceCreatedAt DateTime?,SourceDefaultBranch string,SourceDescription string,SourceFork boolean?,SourceForks int64?,SourceForksCount int64?,SourceFullName string,SourceHasDownloads boolean?,SourceHasIssues boolean?,SourceHasPages boolean?,SourceHasWiki boolean?,SourceId int64
?,SourceLanguage string,SourceName string,SourceOpenIssues int64?,SourceOpenIssuesCount int64?,SourceOwnerId int64?,SourceOwnerLogin string,SourceOwnerSiteAdmin boolean?,SourceOwnerType string,SourcePrivate boolean?,SourcePushedAt DateTime?,SourceSize int64?,SourceStargazersCount int64?,SourceUpdatedAt DateTime?,SourceWatchers int64?,SourceWatch
ersCount int64?,StargazersCount int64?,SubscribersCount int64?,UpdatedAt DateTime?,Watchers int64?,WatchersCount int64?,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Fork" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.Fork SELECT * FROM @pop
ulate;
@populate = EXTRACT Key string,City string,Country string,CountryCode string,Latitude string,Longitude string,State string,Status string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.GeoCache" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.Ge
oCache SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,Number int64?,IssueId int64?,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,Body byte[],ClosedAt DateTime?,ClosedById int64?,ClosedByLogin string,ClosedBySiteAdmin boolean?,ClosedByType string,Comments int64?,CreatedAt DateTime?,Locked boolean?,MilestoneClosedAt 
DateTime?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType string,MilestoneDescription string,MilestoneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState string,MilestoneTitle st
ring,MilestoneUpdatedAt DateTime?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Issue" USING Extractors.Tsv(); INSERT INTO GitHubAnalyt
ics.dbo.Issue SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,IssueId int64?,IssueCommentId int64?,Body byte[],CreatedAt DateTime?,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.I
ssueComment" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.IssueComment SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,IssueId int64?,IssueEventId int64?,ActorId int64?,ActorLogin string,ActorSiteAdmin boolean?,ActorType string,AssigneeId int64?,AssigneeLogin string,AssigneeSiteAdmin boolean?,AssigneeType string,CommitId string,CreatedAt DateTime?,EventName string,LabelColor string,LabelName string,MilestoneTitle stri
ng,RenameFrom string,RenameTo string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.IssueEvent" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.IssueEvent SELECT * FROM @populate;
@populate = EXTRACT IssueId int64?,IssueLabelId int,EtlIngestDate DateTime,Color string,Name string,UpdatedAt DateTime?,EtlSourceId string FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.IssueLabel" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.IssueLabel SELECT * FROM @populate;
@populate = EXTRACT Org string,OrgMemberId int64?,Login string,SiteAdmin boolean?,Type string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.OrgMember" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.OrgMember SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,Number int64?,PullRequestId int64?,LinksCommentsHref string,LinksCommitsHref string,LinksHtmlHref string,LinksIssueHref string,LinksReviewCommentHref string,LinksReviewCommentsHref string,LinksSelfHref string,LinksStatusesHref string,Additions int64?,AssigneeId int64?,AssigneeLogin string,AssigneeSite
Admin boolean?,AssigneeType string,BaseLabel string,BaseRef string,BaseRepoCreatedAt DateTime?,BaseRepoDefaultBranch string,BaseRepoDescription string,BaseRepoFork boolean?,BaseRepoForks int64?,BaseRepoForksCount int64?,BaseRepoFullName string,BaseRepoHasDownloads boolean?,BaseRepoHasIssues boolean?,BaseRepoHasPages boolean?,BaseRepoHasWiki bool
ean?,BaseRepoHomepage string,BaseRepoId int64?,BaseRepoLanguage string,BaseRepoName string,BaseRepoOpenIssues int64?,BaseRepoOpenIssuesCount int64?,BaseRepoOwnerId int64?,BaseRepoOwnerLogin string,BaseRepoOwnerSiteAdmin boolean?,BaseRepoOwnerType string,BaseRepoPrivate boolean?,BaseRepoPushedAt DateTime?,BaseRepoSize int64?,BaseRepoStargazersCou
nt int64?,BaseRepoUpdatedAt DateTime?,BaseRepoWatchers int64?,BaseRepoWatchersCount int64?,BaseSha string,BaseUserId int64?,BaseUserLogin string,BaseUserSiteAdmin boolean?,BaseUserType string,Body byte[],ChangedFiles int64?,ClosedAt DateTime?,Comments int64?,Commits int64?,CreatedAt DateTime?,Deletions int64?,HeadLabel string,HeadRef string,Head
RepoCreatedAt DateTime?,HeadRepoDefaultBranch string,HeadRepoDescription string,HeadRepoFork boolean?,HeadRepoForks int64?,HeadRepoForksCount int64?,HeadRepoFullName string,HeadRepoHasDownloads boolean?,HeadRepoHasIssues boolean?,HeadRepoHasPages boolean?,HeadRepoHasWiki boolean?,HeadRepoHomepage string,HeadRepoId int64?,HeadRepoLanguage string,
HeadRepoName string,HeadRepoOpenIssues int64?,HeadRepoOpenIssuesCount int64?,HeadRepoOwnerId int64?,HeadRepoOwnerLogin string,HeadRepoOwnerSiteAdmin boolean?,HeadRepoOwnerType string,HeadRepoPrivate boolean?,HeadRepoPushedAt DateTime?,HeadRepoSize int64?,HeadRepoStargazersCount int64?,HeadRepoUpdatedAt DateTime?,HeadRepoWatchers int64?,HeadRepoW
atchersCount int64?,HeadSha string,HeadUserId int64?,HeadUserLogin string,HeadUserSiteAdmin boolean?,HeadUserType string,Locked boolean?,MergeCommitSha string,Mergeable boolean?,MergeableState string,Merged boolean?,MergedAt DateTime?,MergedById int64?,MergedByLogin string,MergedBySiteAdmin boolean?,MergedByType string,MilestoneClosedAt DateTime
?,MilestoneClosedIssues int64?,MilestoneCreatedAt DateTime?,MilestoneCreatorId int64?,MilestoneCreatorLogin string,MilestoneCreatorSiteAdmin boolean?,MilestoneCreatorType string,MilestoneDescription string,MilestoneDueOn DateTime?,MilestoneId int64?,MilestoneNumber int64?,MilestoneOpenIssues int64?,MilestoneState string,MilestoneTitle string,Mil
estoneUpdatedAt DateTime?,ReviewComments int64?,State string,Title string,UpdatedAt DateTime?,UserId int64?,UserLogin string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.PullRequest" USING Extractors.Tsv(); INSE
RT INTO GitHubAnalytics.dbo.PullRequest SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,PullRequestId int64?,PullRequestCommentId int64?,LinksHtmlHref string,LinksPullRequestHref string,LinksSelfHref string,Body byte[],CommitId string,CreatedAt DateTime?,DiffHunk string,OriginalCommitId string,OriginalPosition int64?,Path string,Position int64?,UpdatedAt DateTime?,UserId int64?,UserLogin
 string,UserSiteAdmin boolean?,UserType string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.PullRequestComment" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.PullRequestComment SELECT * FROM @populate;
@populate = EXTRACT Name string,OwnerLogin string,CreatedAt DateTime?,DefaultBranch string,Description string,Fork boolean?,Forks int64?,ForksCount int64?,FullName string,HasDownloads boolean?,HasIssues boolean?,HasPages boolean?,HasWiki boolean?,Homepage string,RepoId int64?,Language string,NetworkCount int64?,OpenIssues int64?,OpenIssuesCount 
int64?,OrganizationId int64?,OrganizationLogin string,OrganizationSiteAdmin boolean?,OrganizationType string,OwnerId int64?,OwnerSiteAdmin boolean?,OwnerType string,ParentCreatedAt DateTime?,ParentDefaultBranch string,ParentDescription string,ParentFork boolean?,ParentForks int64?,ParentForksCount int64?,ParentFullName string,ParentHasDownloads 
boolean?,ParentHasIssues boolean?,ParentHasPages boolean?,ParentHasWiki boolean?,ParentHomepage string,ParentId int64?,ParentLanguage string,ParentName string,ParentOpenIssues int64?,ParentOpenIssuesCount int64?,ParentOwnerId int64?,ParentOwnerLogin string,ParentOwnerSiteAdmin boolean?,ParentOwnerType string,ParentPrivate boolean?,ParentPushedAt
 DateTime?,ParentSize int64?,ParentStargazersCount int64?,ParentUpdatedAt DateTime?,ParentWatchers int64?,ParentWatchersCount int64?,PermissionsAdmin boolean?,PermissionsPull boolean?,PermissionsPush boolean?,IsPrivate boolean?,PushedAt DateTime?,Size int64?,SourceCreatedAt DateTime?,SourceDefaultBranch string,SourceDescription string,SourceFork
 boolean?,SourceForks int64?,SourceForksCount int64?,SourceFullName string,SourceHasDownloads boolean?,SourceHasIssues boolean?,SourceHasPages boolean?,SourceHasWiki boolean?,SourceHomepage string,SourceId int64?,SourceLanguage string,SourceName string,SourceOpenIssues int64?,SourceOpenIssuesCount int64?,SourceOwnerId int64?,SourceOwnerLogin str
ing,SourceOwnerSiteAdmin boolean?,SourceOwnerType string,SourcePrivate boolean?,SourcePushedAt DateTime?,SourceSize int64?,SourceStargazersCount int64?,SourceUpdatedAt DateTime?,SourceWatchers int64?,SourceWatchersCount int64?,StargazersCount int64?,SubscribersCount int64?,UpdatedAt DateTime?,Watchers int64?,WatchersCount int64?,EtlSourceId stri
ng,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Repo" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.Repo SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,Color string,Name string,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.RepoLabel" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.RepoLabel SELECT * FROM @populate;
@populate = EXTRACT Login string,UserId int64?,Bio string,Blog string,Company string,CreatedAt DateTime?,Email string,Followers int64?,Following int64?,Hireable boolean?,Location string,Name string,PublicGists int64?,PublicRepos int64?,SiteAdmin boolean?,Type string,UpdatedAt DateTime?,EtlSourceId string,EtlIngestDate DateTime FROM @"adl://githu
banalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.User" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.User SELECT * FROM @populate;
@populate = EXTRACT Repo string,Owner string,Login string,WatcherId int64?,Bio string,Blog string,Company string,CreatedAt DateTime?,Email string,Followers int64?,Following int64?,Hireable boolean?,Location string,Name string,PublicGists int64?,PublicRepos int64?,SiteAdmin boolean?,Type string,UpdatedAt DateTime?,EtlSourceId string,EtlIngestDate
 DateTime,RowNumber int64? FROM @"adl://githubanalytics.azuredatalakestore.net/GitHubAnalytics.StagingData/GitHubAnalytics.dbo.Watcher" USING Extractors.Tsv(); INSERT INTO GitHubAnalytics.dbo.Watcher SELECT * FROM @populate;

// END ----------------------------------------------------------------------

